<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>it.trentour.services</groupId>
	<artifactId>universiadi2013.poi</artifactId>
	<version>1.0</version>
	<packaging>bundle</packaging>

	<parent>
		<groupId>it.sayservice.platform</groupId>
		<artifactId>servicebus-conf</artifactId>
		<version>1.3</version>
	</parent>

	<dependencies>
		<dependency>
			<groupId>it.sayservice</groupId>
			<artifactId>opencsv.osgi</artifactId>
			<version>2.3</version>
		</dependency>
    	<dependency>
      		<groupId>org.codehaus.jackson</groupId>
      		<artifactId>jackson-mapper-lgpl</artifactId>
      	  	<version>1.9.4</version>
    	  	<type>jar</type>
	      	<scope>compile</scope>
    	</dependency>
    	<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.10</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<version>2.3.7</version>
				<extensions>true</extensions>
				<configuration>
					<instructions>
						<Include-Resource>{maven-resources}</Include-Resource>
                        <Embed-Dependency>opencsv.osgi</Embed-Dependency>
                        <Embed-Transitive>true</Embed-Transitive>
						<Import-Package>*</Import-Package>
						<Export-Package>it.sayservice.services.universiadi2013.*</Export-Package>
						<Private-Package>!*</Private-Package>
						<!-- <DynamicImport-Package>*</DynamicImport-Package> -->
					</instructions>
				</configuration>
			</plugin>
			<plugin>
				<groupId>it.sayservice.platform</groupId>
				<artifactId>compiler-plugin</artifactId>
				<version>${compiler-plugin}</version>
				<configuration>
					<service>service/universiadi2013</service>
					<protoInputFile>data.proto</protoInputFile>
					<base>${project.basedir}/src/main/resources/</base>
					<protoClass>it.sayservice.services.universiadi2013.data.message.Data</protoClass>
				</configuration>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>ssbuild</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>it.sayservice.platform</groupId>
				<artifactId>sb-compiler-plugin</artifactId>
				<version>${sb-compiler-plugin}</version>
				<configuration>
					<services>
						<service>
							<serviceClassName>it.sayservice.services.universiadi2013.impl.ServiceImpl</serviceClassName>
							<methods>
								<method>
									<methodName>GetPoiFromCsv</methodName>
									<statusParameters>
										<storable>true</storable>
										<automaticRefresh>false</automaticRefresh>
										<delay>#{1000L*15}</delay>
										<period>#{1000L*60*60*24}</period>
										<periodOnDefault>#{1000L*60*60*24}</periodOnDefault>
										<periodOnFailure>#{1000L*60*60*48}</periodOnFailure>
										<cacheValidityPeriod>#{1000L*60*60*24*15}</cacheValidityPeriod>
										<validityPeriod>#{1000L*60*60*24*30}</validityPeriod>
										<serviceBlocked>false</serviceBlocked>
										<dataFlowInvokable>true</dataFlowInvokable>
										<runnableAfterDelay>false</runnableAfterDelay>
									</statusParameters>
								</method>
								<method>
									<methodName>GetNews</methodName>
									<statusParameters>
										<storable>true</storable>
										<automaticRefresh>false</automaticRefresh>
										<delay>#{1000L*15}</delay>
										<period>#{1000L*60*60*24}</period>
										<periodOnDefault>#{1000L*60*60*24}</periodOnDefault>
										<periodOnFailure>#{1000L*60*60*48}</periodOnFailure>
										<cacheValidityPeriod>#{1000L*60*60*24*15}</cacheValidityPeriod>
										<validityPeriod>#{1000L*60*60*24*30}</validityPeriod>
										<serviceBlocked>false</serviceBlocked>
										<dataFlowInvokable>true</dataFlowInvokable>
										<runnableAfterDelay>false</runnableAfterDelay>
									</statusParameters>
								</method>
								<method>
									<methodName>GetVenues</methodName>
									<statusParameters>
										<storable>true</storable>
										<automaticRefresh>false</automaticRefresh>
										<delay>#{1000L*15}</delay>
										<period>#{1000L*60*60*24}</period>
										<periodOnDefault>#{1000L*60*60*24}</periodOnDefault>
										<periodOnFailure>#{1000L*60*60*48}</periodOnFailure>
										<cacheValidityPeriod>#{1000L*60*60*24*15}</cacheValidityPeriod>
										<validityPeriod>#{1000L*60*60*24*30}</validityPeriod>
										<serviceBlocked>false</serviceBlocked>
										<dataFlowInvokable>true</dataFlowInvokable>
										<runnableAfterDelay>false</runnableAfterDelay>
									</statusParameters>
								</method>
								<method>
									<methodName>GetEvents</methodName>
									<statusParameters>
										<storable>true</storable>
										<automaticRefresh>false</automaticRefresh>
										<delay>#{1000L*15}</delay>
										<period>#{1000L*60*60*24}</period>
										<periodOnDefault>#{1000L*60*60*24}</periodOnDefault>
										<periodOnFailure>#{1000L*60*60*48}</periodOnFailure>
										<cacheValidityPeriod>#{1000L*60*60*24*15}</cacheValidityPeriod>
										<validityPeriod>#{1000L*60*60*24*30}</validityPeriod>
										<serviceBlocked>false</serviceBlocked>
										<dataFlowInvokable>true</dataFlowInvokable>
										<runnableAfterDelay>false</runnableAfterDelay>
									</statusParameters>
								</method>
								<method>
									<methodName>GetCompetitionSchedule</methodName>
									<statusParameters>
										<storable>true</storable>
										<automaticRefresh>false</automaticRefresh>
										<delay>#{1000L*15}</delay>
										<period>#{1000L*60*60*24}</period>
										<periodOnDefault>#{1000L*60*60*24}</periodOnDefault>
										<periodOnFailure>#{1000L*60*60*48}</periodOnFailure>
										<cacheValidityPeriod>#{1000L*60*60*24*15}</cacheValidityPeriod>
										<validityPeriod>#{1000L*60*60*24*30}</validityPeriod>
										<serviceBlocked>false</serviceBlocked>
										<dataFlowInvokable>true</dataFlowInvokable>
										<runnableAfterDelay>false</runnableAfterDelay>
									</statusParameters>
								</method>
							</methods>
						</service>
					</services>
				</configuration>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>sbbuild</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>